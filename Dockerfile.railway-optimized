FROM php:8.2-cli

# Copy dockerignore for Railway
COPY .dockerignore.railway .dockerignore

# Install system dependencies with optimizations
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    nodejs \
    npm \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy package files first for better caching
COPY package.json package-lock.json ./

# Install Node dependencies with production optimization
RUN npm ci --only=production --no-audit --no-fund --prefer-offline

# Copy composer files
COPY composer.json composer.lock ./

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-scripts

# Copy application files
COPY artisan ./
COPY start.sh ./
COPY app/ ./app/
COPY bootstrap/ ./bootstrap/
COPY config/ ./config/
COPY database/ ./database/
COPY public/ ./public/
COPY resources/ ./resources/
COPY routes/ ./routes/
COPY storage/ ./storage/

# Create proper .env file for build process
RUN echo "APP_NAME=SkillsXchange\nAPP_ENV=production\nAPP_KEY=\nAPP_DEBUG=false\nDB_CONNECTION=mysql\nDB_HOST=mysql.railway.internal\nDB_PORT=3306\nDB_DATABASE=railway\nDB_USERNAME=root\nDB_PASSWORD=\nLOG_CHANNEL=stderr\nCACHE_DRIVER=file\nSESSION_DRIVER=file\nQUEUE_CONNECTION=sync\nMAIL_MAILER=log" > .env

# Try to build assets with timeout, fallback to minimal CSS
RUN timeout 60 npm run build || { \
    echo "Asset build failed, creating fallback CSS..."; \
    mkdir -p public/css; \
    echo 'body{font-family:system-ui,-apple-system,sans-serif;margin:0;padding:0}.btn{display:inline-block;padding:0.5rem 1rem;text-decoration:none;border-radius:0.25rem}.btn-primary{background:#2563eb;color:white}.alert{padding:1rem;margin:1rem 0;border-radius:0.25rem}.container{max-width:1200px;margin:0 auto;padding:0 1rem}.navbar{background:white;padding:1rem 0;box-shadow:0 2px 4px rgba(0,0,0,0.1)}' > public/css/fallback.css; \
    echo '{"resources/css/app.css":{"file":"css/fallback.css","isEntry":true}}' > public/build/manifest.json; \
    }

# Ensure Firebase files are accessible
RUN chmod 644 public/firebase-config.js public/firebase-video-integration.js public/firebase-video-call.js

# Application key will be generated at runtime in start.sh

# Expose port
EXPOSE $PORT

# Make start script executable
RUN chmod +x start.sh

# Start the application
CMD ./start.sh
